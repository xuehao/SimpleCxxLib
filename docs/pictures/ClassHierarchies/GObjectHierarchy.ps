#include <bookdefs.ps>
#include <fakeuml.ps>
#include "hierarchy.ps"

/DY0 100 def
/DY1 44 def
/DX 8 def

/X0 400 def
/Y0 400 def

/Y1 Y0 UML_BOX_HEIGHT sub DY0 sub def
/Y2 Y1 UML_BOX_HEIGHT sub DY1 sub def

/SHAPE_CLASSES [
  (GArc)
  (GImage)
  (GLabel)
  (GLine)
  (GOval)
  (GRect)
  (GPolygon)
  (GCompound)
] def

/UML_HTML_LINK LINK_TO_SELF def
X0 UML_BOX_WIDTH 2 div sub Y0 (GObject) drawAbstractClass
/UML_HTML_LINK true def
X0 Y1 (GObject) SHAPE_CLASSES drawSubclasses
/x classTable (GRect) get split pop UML_BOX_WIDTH 2 div add def
x Y2 (GRect) [ (G3DRect) (GRoundRect) ] drawSubclasses

/dumpHTML {
  9 dict begin
    /text exch def
    /filename exch def
    /ok true def
    errordict /invalidfileaccess { /ok false def } put
    filename (w) file /out exch def
    ok {
      /width SHAPE_CLASSES length dup UML_BOX_WIDTH mul exch 1 sub DX mul
        add def
      out text writestring
      out (<p><div class=inset>\n) writestring
      LINK_TO_SELF {
        out (<img src="images/GObjectHierarchy-h.png"\n) writestring
      } {
        out (<img src="images/GObjectHierarchy.png"\n) writestring
      } ifelse
      out (     width=) writestring
      out width UML_SF mul 0.5 add cvi 10 string cvs writestring
      out ( usemap="#GObjectMap" alt="GObjectHierarchy">\n) writestring
      out (</div>\n) writestring
      out (<map name="GObjectMap">\n) writestring
      LINK_TO_SELF {
        out (GObject) (GObject-class.html) dumpAreaTag
      } if
      SHAPE_CLASSES { out exch dup (-class.html) conc dumpAreaTag } forall
      out (G3DRect) (G3DRect-class.html) dumpAreaTag
      out (GRoundRect) (GRoundRect-class.html) dumpAreaTag
      out (</map>\n) writestring
      out closefile
    } if
  end
} def

LINK_TO_SELF {
  (GObjectHierarchy-h.html)
  (The <code>GObject</code> hierarchy looks like this:\n\n)
  dumpHTML
} {
  (GObjectHierarchy.html)
  (These subclasses form a hierarchy that looks like this:\n\n)
  dumpHTML
} ifelse
